---
pagination:
  data: collections.locations
  size: 1
  alias: location
---
<script webc:setup>
  const upcomingEvents = (location) => upcoming(where($data.collections.events, location, 'data.location'))
  const pastEvents = (location) => past(where($data.collections.events, location, 'data.location')).reverse()
  const hasUpcoming = (location) => upcomingEvents(location).length > 0
  const hasPast = (location) => pastEvents(location).length > 0
</script>

<div class="container my-8 mx-auto prose md:prose-xl">
    <h2 class="mb-2 md:mb-4 text-center" @text="location.data.title"></h2>
    <template webc:type="11ty" 11ty:type="liquid,md" webc:nokeep>
      {{ location.data.description }}
    </template>
</div>

<div webc:if="hasUpcoming(location.data.title)">
    <div class="divider divider-accent">Upcoming Events…</div>

    <div class="container mx-auto my-8">
          <event-timeline :@events="upcomingEvents(location.data.title)"></event-timeline>
    </div>
</div>

<div webc:if="hasPast(location.data.title)">
    <div class="divider divider-accent">Previous Events…</div>

    <div class="container mx-auto my-8">
          <event-timeline :@events="pastEvents(location.data.title)"></event-timeline>
    </div>
</div>
