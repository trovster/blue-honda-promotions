---
pagination:
  data: collections.events
  size: 1
  alias: event
---
<script webc:setup>
  const upcomingEvents = (event) => exclude(upcoming(where($data.collections.events, event.data.location, 'data.location')), event.page.url)
  const pastEvents = (event) => exclude(past(where($data.collections.events, event.data.location, 'data.location')), event.page.url).reverse()
  const hasUpcoming = (event) => upcomingEvents(event).length > 0
  const hasPast = (event) => pastEvents(event).length > 0
</script>

<div class="bg-base-200 p-8 border-secondary border-t-4">
    <div class="sm:container sm:max-w-prose mx-auto space-y-3">
        <h1 class="font-bold mb-4 text-3xl sm:text-5xl">
            <span @text="event.data.title"></span>
        </h1>

        <event-meta :@event="event"></event-meta>
    </div>
</div>

<div class="bg-accent p-8 mb-12">
    <div class="sm:container sm:max-w-prose mx-auto space-y-3">
        <event-artists :@event="event"></event-artists>
    </div>
</div>

<div webc:if="hasUpcoming(event)">
    <div class="divider divider-accent">Upcoming Events in <span @text="event.data.location" webc:nokeep></span>…</div>

    <div class="container mx-auto my-8">
        <event-timeline :@events="upcomingEvents(event)"></event-timeline>
    </div>
  </div>

  <div webc:if="hasPast(event)">
    <div class="divider divider-accent">Previous Events in <span @text="event.data.location" webc:nokeep></span>…</div>

    <div class="container mx-auto my-8">
        <event-timeline :@events="pastEvents(event)"></event-timeline>
    </div>
</div>
